
R : Copyright 2006, The R Foundation for Statistical Computing
Version 2.3.1 (2006-06-01)
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> invisible(options(echo = TRUE))
> library(mvtnorm)
> set.seed(290875)
> 
> # correlation matrices for unequal variances were wrong
> # from Pamela Ohman-Strickland <ohmanpa@UMDNJ.EDU>
> 
> a <- 4.048
> shi <- -9
> slo <- -10
> mu <- -5
> sig <- matrix(c(1,1,1,2),ncol=2) 
> pmvnorm(lower=c(-a,slo),upper=c(a,shi),mean=c(mu,2*mu),sigma=sig)
[1] 0.04210555
attr(,"error")
[1] 1e-15
attr(,"msg")
[1] "Normal Completion"
> 
> # check if set.seed works (starting from 0.5-7)
> n <- 5
> lower <- -1
> upper <- 3
> df <- 4
> corr <- diag(5)
> corr[lower.tri(corr)] <- 0.5
> delta <- rep(0, 5)
> set.seed(290875)
> prob1 <- pmvt(lower=lower, upper=upper, delta=delta, df=df, corr=corr)
> set.seed(290875)
> prob2 <- pmvt(lower=lower, upper=upper, delta=delta, df=df, corr=corr)
> stopifnot(all.equal(prob1, prob2))
> 
> # confusion for univariate probabilities when sigma is a matrix
> # by Jerome Asselin <jerome@hivnet.ubc.ca>
> a <- pmvnorm(lower=-Inf,upper=2,mean=0,sigma=matrix(1.5))
> attributes(a) <- NULL
> stopifnot(all.equal(a, pnorm(2, sd=sqrt(1.5))))
> a <- pmvnorm(lower=-Inf,upper=2,mean=0,sigma=matrix(.5))
> attributes(a) <- NULL
> stopifnot(all.equal(a, pnorm(2, sd=sqrt(.5))))
> a <- pmvnorm(lower=-Inf,upper=2,mean=0,sigma=.5)
> attributes(a) <- NULL
> stopifnot(all.equal(a, pnorm(2, sd=sqrt(.5))))
> 
> # log argument added by Jerome Asselin <jerome@hivnet.ubc.ca>
> dmvnorm(x=c(0,0), mean=c(1,1),log=TRUE)
[1] -2.837877
> dmvnorm(x=c(0,0), mean=c(25,25),log=TRUE)
[1] -626.8379
> dmvnorm(x=c(0,0), mean=c(30,30),log=TRUE)
[1] -901.8379
> stopifnot(all.equal(dmvnorm(x=0, mean=30,log=TRUE), 
+                     dnorm(0,30,log=TRUE)))
> 
> # large df
> pnorm(2)^2
[1] 0.9550173
> pmvt(lower=c(-Inf,-Inf), upper=c(2,2), delta=c(0, 0), df=25, corr=diag(2))
[1] 0.9446454
attr(,"error")
[1] 1e-15
attr(,"msg")
[1] "Normal Completion"
> pmvt(lower=c(-Inf,-Inf), upper=c(2,2), delta=c(0, 0), df=250, corr=diag(2))
[1] 0.9539846
attr(,"error")
[1] 1e-15
attr(,"msg")
[1] "Normal Completion"
> pmvt(lower=c(-Inf,-Inf), upper=c(2,2), delta=c(0, 0), df=1340, corr=diag(2))
[1] 0.9548248
attr(,"error")
[1] 1e-15
attr(,"msg")
[1] "Normal Completion"
> pmvt(lower=c(-Inf,-Inf), upper=c(2,2), delta=c(0, 0), df=2500, corr=diag(2))
[1] 0.9549141
attr(,"error")
[1] 1e-15
attr(,"msg")
[1] "Normal Completion"
> pmvt(lower=c(-100,-100), upper=c(2,2), delta=c(0, 0), df=2500, corr=diag(2))
[1] 0.9549141
attr(,"error")
[1] 1e-15
attr(,"msg")
[1] "Normal Completion"
> 
> # df = 0
> pmvt(lower=c(-Inf,-Inf), upper=c(2,2), delta=c(0, 0), df=0, corr=diag(2))
[1] 0.9550173
attr(,"error")
[1] 1e-15
attr(,"msg")
[1] "Normal Completion"
> pmvt(lower=-Inf, upper = 2, delta=0, df=0, corr=1)
[1] 0.9772499
attr(,"error")
[1] 0
attr(,"msg")
[1] "univariate: using pnorm"
> pnorm(2)
[1] 0.9772499
> 
> # larger dimensions
> pnorm(2)^2
[1] 0.9550173
> pmvnorm(lower=rep(-Inf, 2), upper=rep(2,2), sigma = diag(2))
[1] 0.9550173
attr(,"error")
[1] 1e-15
attr(,"msg")
[1] "Normal Completion"
> pnorm(2)^90
[1] 0.1260393
> pmvnorm(lower=rep(-Inf, 90), upper=rep(2,90), sigma = diag(90))
[1] 0.1260393
attr(,"error")
[1] 0
attr(,"msg")
[1] "Normal Completion"
> pnorm(2)^199
[1] 0.01025932
> pmvnorm(lower=rep(-Inf, 199), upper=rep(2,199), sigma = diag(199))
[1] 0.01025932
attr(,"error")
[1] 0
attr(,"msg")
[1] "Normal Completion"
> 
> # larger dimensions, again. Spotted by Chihiro Kuroki <kuroki@oak.dti.ne.jp>
> # Alan's fix to MVCHNC solves this problem
> cr = matrix(0.5, nr = 4, nc = 4)
> diag(cr) = 1
> cr
     [,1] [,2] [,3] [,4]
[1,]  1.0  0.5  0.5  0.5
[2,]  0.5  1.0  0.5  0.5
[3,]  0.5  0.5  1.0  0.5
[4,]  0.5  0.5  0.5  1.0
> a <- pmvt(low = -rep(1, 4), upp = rep(1, 4), df = 999, corr = cr)
> b <- pmvt(low = -rep(1, 4), upp = rep(1, 4), df = 4999, corr = cr)
> b
[1] 0.2893192
attr(,"error")
[1] 8.971803e-05
attr(,"msg")
[1] "Normal Completion"
> attributes(a) <- NULL
> attributes(b) <- NULL
> stopifnot(all.equal(round(a, 3), round(b, 3)))
> 
> # cases where the support is the empty set tried to compute something.
> # spotted by Peter Thomson <peter@statsresearch.co.nz>
> stopifnot(pmvnorm(upper=c(-Inf,1)) == 0)
> stopifnot(pmvnorm(lower=c(Inf,1)) == 0)
> stopifnot(pmvnorm(lower=c(-2,0),upper=c(-1,1),corr=matrix(rep(1,4),2,2)) == 0)
> 
> # bugged Fritz (long time ago)
> stopifnot(all.equal(pmvnorm(-Inf, c(Inf, 0), 0, diag(2)), pmvnorm(-Inf,
+                     c(Inf, 0), 0)))
> 
> # this is a bug in `mvtdst' nobody was able to fix yet :-(
> stopifnot(pmvnorm(lo=c(-Inf,-Inf), up=c(Inf,Inf), mean=c(0,0) == 0)
+ 
