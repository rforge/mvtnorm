
\SweaveOpts{keep.source = TRUE}

%%TH: Why is the method `analytical'? it involves numerical intergration, i.e., approximation!

\title{\pkg{mvtnorm}: New analytical algorithm for multivariate normal probabilities}
\author{Xuefei Mi, Tetsuhisa Miwa and Torsten Hothorn}

\maketitle

\cite{Miwa2003} proposed an analytical algorithm for
evaluating multivariate normal probabilities. Starting with
version 0.9-0 of the \pkg{mvtnorm} package 
\citep{Hothorn2001, PKG:mvtnorm}, 
this algorithm is available to the \R{} community. We give a brief
introduction to Miwa's procedure and compare
it to a quasi-randomized Monte-Carlo procedure proposed
by \cite{Genz1999}, which has been available through
\pkg{mvtnorm} for some years now, both with respect to
computing time and accuracy.

%%TH: is this Genz & Bretz 1999 or Genz 1992. For the
%% first one we need Genz/Bretz throughout the manuscript.

The new algorithm is applicable to problems with
dimension smaller than $20$, whereas the procedures by
\cite{Genz1999} can be used to evaluate $1000$-dimensional
normal distributions. At the end of this article, a suggestion 
is given for choosing a suitable algorithm in different situations.

\section{Introduction}
An algorithm for calculating any non-centred orthant probability of
a non-singular multivariate normal distribution is described  by
\cite{Miwa2003}. The probability function in a one-sided problem is 
\begin{eqnarray*}
P_{m}(\mu, \bf{R}) & = & \Prob\{x_i \geq 0; \, 1\leq i\leq m\} \\
& = & \int_0^\infty...\int_0^\infty \phi_m(\x; \mu, \Cor) \, dx_1...dx_m
\end{eqnarray*}
where $\mu =(\mu_1,...,\mu_m)^\top$ is the mean and
and $\Cor = (\rho_{ij})$ the correlation matrix. $\phi_m$ is the 
density function of the $m$-dimensional normal distribution with
mean $\mu$ and correlation matrix $\Cor$.

The distribution function for can be expressed as:
\begin{eqnarray*}
F_m(\c) & = & \Prob \{x_i \leq c_i; \, 1\leq i\leq m \} \\
        & = & \Prob \{- x_i \geq  - c_i; \, 1\leq i\leq m \} \\
        & = & P_m(-\mu+\c,\Cor).
\end{eqnarray*}
The $m$-dimensional non-centred orthant one-sided probability can be calculated from at most
$(m-1)!$ non-centred probabilities with positive definite
tridiagonal correlation matrix. The algorithm for calculating such
probabilities is a recursive linear integration procedure. The total
order of a one-sided problem is $G \times m!$, where $G$ is the number of
grid points for integration.

The two-sided probability
\begin{eqnarray*}
F_{m}(\d, \c) = \Prob\{d_i \leq x_i \leq c_i; \, 1\leq i\leq m\}
\end{eqnarray*}
%%TH: what is C_m???
can be calculated from $1+C_m^1+C_m^2+,...,+C_m^m = 2^m $
$m$-dimensional one-sided probabilities which have the same mean and
correlation matrix. The total order of this two-sided problem
is $G \times m! \times 2^m$.

A new \code{algorithm} argument to \code{pmvnorm} and \code{qmvnorm}
has been introduced in \pkg{mvtnorm} version 0.9-0 in order to
switch between two algorithms: \code{GenzBretz()} is the default
and triggers the use of the above mentioned 
quasi-randomized Monte-Carlo procedure by \cite{Genz1999}.
Alternatively, \code{algorithm = Miwa()} applies the procedure
discussed here. Both functions can be used to specify hyper-parameters
of the algorithm. For \code{Miwa()}, the argument
\code{steps} defines the number of grid points $G$ to be evaluated.
 
The following example shows how to calculate the probability
\begin{eqnarray*}
& & F_{m}(\d, \c) \\
& & = \Prob\{-1<x_1<1,-4<x_2<4,-2<x_3<2\}.
\end{eqnarray*}
with mean $\mu = (0,0,0)^\top$ and correlation matrix
\begin{eqnarray*}
\Cor = \left( \begin{array}{ccc} 1 & 1/4 & 1/5 \\
1/4 & 1 & 1/3 \\
1/5 & 1/3 & 1 \end{array} \right)
\end{eqnarray*}
by using the following \R code:
<<ex1, echo = TRUE>>=
library("mvtnorm")
m <- 3
S <- diag(m)
S[2, 1] <- S[1, 2] <- 1 / 4
S[3, 1] <- S[3, 1] <- 1 / 5
S[3, 2] <- S[3, 2] <- 1 / 3
pmvnorm(lower = -c(1,4,2), 
        upper = c(1,4,2),
        mean=rep(0, m), sigma = S, 
        algorithm = Miwa())
@
The upper limit and lower limit of the integral region are passed by
the vectors \code{upper} and \code{lower}. The mean vector and correlation matrix are
given by the vector \code{mean} and the matrix \code{sigma}. From the result we know
that $\Prob\{-1 < x_1 < 1, -4 < x_2 < 4, -2 < x_3 <2\} = 0.6536804$ with given
correlation matrix $\Cor$. This is an analytical result.

%%TH: Why is this analytical?

%%TH: The Algorithm column needs Miwa / or Genz/Bretz somewhere...

\begin{table*}[t!]
\begin{center}
\begin{tabular}{l | llll }
 \hline
 \multicolumn{1}{c |}{Algorithm} & \multicolumn{2}{c}{$m=5$} &
\multicolumn{2}{c}{$m=10$} \\
 \hline
  & $\rho=\frac{1}{2}$ & $\rho=-\frac{1}{2}$ & $\rho=\frac{1}{2}$ & $\rho=-\frac{1}{2}$ \\
 $\varepsilon=10^{-4}$ & 0.08468833          & 0.001385620 &  0.008863600  & $2.376316 \times 10^{-8}$ \\
   $\varepsilon=10^{-5}$ & 0.08472561          & \underline{\textbf{0.001390769}} &  0.008863877  & \underline{\textbf{$2.319286 \times 10^{-8}$}} \\
  $\varepsilon=10^{-6}$ & \underline{\textbf{0.08472682}} & 0.001388424 &  \underline{\textbf{0.008862195}}  & $2.671923 \times 10^{-8}$ \\
 G=128              & 0.08472222          & 0.001388889 &  0.008863235  & $2.505205 \times 10^{-8} $\\
   Exact.           & 0.08472222          & 0.001388889 & 0.008863236  & $2.505211 \times 10^{-8}$ \\
\hline
\end{tabular}
\label{table1} \caption{Value of probabilities with tri-diagonal
correlation coefficients, $\rho_{i,i\pm1}=2^{-1}, 1\leq i \leq m$ and 
$\rho_{i,j}=0,\forall |i-j|>1$.}
\end{center}
\end{table*}


\begin{table*}[b!]
\begin{center}
\begin{tabular}{l | llll }
 \hline
 \multicolumn{1}{c |}{Algorithm} & \multicolumn{2}{c}{m=5} &
\multicolumn{2}{c}{m=9} \\
 \hline
  & $\rho=\frac{1}{2}$ & sec. & $\rho=\frac{1}{2}$ & sec. \\
  $\varepsilon=10^{-4}$ & 0.1666398 & 0.029 &  0.09998728 & 0.231 \\
   $\varepsilon=10^{-5}$  & 0.1666719 & 0.132&  0.09998277  & 0.403 \\
   $\varepsilon=10^{-6}$ & 0.1666686 & 0.133 &  0.09999726  & 0.431 \\
 $G=128$              & 0.1666667 &  0.021 &  0.09999995  & \underline{89.921} \\
   Exact.          & 0.1666667 &  &  0.10000000  & \\
\hline
\end{tabular}
\end{center}
\caption{Accuracy and time consumption of non-centred orthant
probabilities with correlation coefficients,
$\rho_{i,j}=2^{-1}, i\neq j$} \label{table2}
\end{table*}


\section{Accuracy and time consumption}
In this section we compare the accuracy and time consumption of 
the \R implementation of the algorithm of \cite{Miwa2003}
with the default procedure for approximating multivariate
normal probabilities in \pkg{mvtnorm} by \cite{Genz1999}.
The experiments were performed using an 
Intel$\circledR$ Pentium$\circledR$ processor with 2.8 GHz.

\subsection{Probabilities with tridiagonal correlation matrix}

The exact value of $P_m(\mu, \Cor)$ is known if $\Cor$ has some
special structure. E.g., when $\Cor$ is a $m$-dimensional tridiagonal
correlation matrix with correlation coefficients
$\rho_{i,i\pm1}= 2^{-1}, 1\leq i \leq m$ and
$\rho_{i,j}=0,\forall |i-j|>1$, the value of $P_m(\mathbf{0}, \Cor)$ is
$((1+m)!)^{-1}$ \citep{Miwa2003}. The accuracy of Miwa' algorithm
($G = 128$ grid points) and Genz' algorithm
%%TH: what exactly is the tolerance??? abseps or releps?
(with tolerance $\varepsilon=10^{-4},10^{-5},10^{-6}$) for probabilities with
tridiagonal correlation matrix are compared in Table \ref{table1}. 
In each calculation we have results with small variance. The values which do
not hold the tolerance error are marked with bold characters in the
tables.


\subsection{Orthant probabilities}

When $\Cor$ is the correlation matrix with
$\rho_{i,j}= 2^{-1}, i \neq j$, the value of $P_m(\mathbf{0}, \Cor)$
is known to be $(1+m)^{-1}$ \citep{Miwa2003}. Accuracy and time
consumption of Miwa's algorithm and Genz' algorithm for this
situation are compared in Table \ref{table2}.


\subsection{Time consuming}

From the accuracy investigation with dimension equal to $5$, $9$
and $10$, we can see that Miwa's algorithm with $G = 128$ grid points has at
least $7$ decimal places in calculating the probabilities, while Genz'
algorithm only has at most five decimal places. When the dimension is
%%TH: I don't understand this sentence.
larger than five, Genz' algorithm with error tolerance smaller than
$10^{-5}$ is hard to achieve. Miwa's algorithm has some
disadvantages. When the dimension $m$ increases, the time consumption
of Miwa's algorithm increases dramatically. Moreover, it can't be applied
to singular problems which are common in multiple testing problems, for example.

\begin{table*}
\begin{center}
\begin{tabular}{l | llll }
 \hline
 \multicolumn{1}{c |}{Dimension} &  \multicolumn{2}{c}{Miwa $G=128$ } &
 \multicolumn{2}{c}{Genz $\varepsilon=10^{-4}$} \\
 \hline
 & Single  & Double & Single  & Double \\
   $m=5$  &0.021     & 0.441    & 0.029  &0.085  \\
   $m=6$  & 0.089    & 8.731    & 0.089  &0.149 \\
   $m=7$  & 0.599    & \underline{156.01}   & 0.083  &0.255  \\
   $m=8$  & 9.956    & \underline{4hours}   & 0.138  &0.233   \\
   $m=9$  & \underline{89.921}   & -    & 0.231  &0.392  \\
\hline
\end{tabular}
\caption{Time consumption of non-centred orthant
probabilities (measured in seconds).} \label{table3}
\end{center}
\end{table*}

\section{Conclusion}

We have implemented an \R interface to the procedure of \cite{Miwa2003}
in the \R package \pkg{mvtnorm}. For small dimensions, it is an alternative
to quasi-randomized Monte-Carlo procedures which are computed by defaults. 
For larger dimensions and especially for singular problems, the method isn't applicable.
 
\bibliography{bibmiwa}

\address{Xuefei Mi \\ Institut f\"ur Biostatistik \\Leibniz Universit\"at Hannover, Germany} \\
\email{mi@biostat.uni-hannover.de}

\address{Tetsuhisa Miwa \\ 
National Institute for Agro-Environmental Sciences \\
Kannondai, Japan} \\
\email{miwa@niaes.affrc.go.jp}

\address{Torsten Hothorn \\Institut f\"ur Statistik \\
         Ludwig-Maximilians-Universit\"at M\"unchen, Germany} \\
\email{Torsten.Hothorn@R-project.org}

